# Main modifier
$mainMod = SUPER

bind = $mainMod, Q, exec, $terminal
bind = $mainMod, C, killactive,
bind = $mainMod, M, exit,
bind = $mainMod, E, exec, $fileManager
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, J, togglesplit, # dwindle

# Rofi widgets
bind = $mainMod, R, exec, $menu
bind = CTRL ALT, DELETE, exec, $powerMenu
bind = $mainMod, B, exec, $rofiBrightnessLauncher

# App launchers
bind = $mainMod, F, exec, $browser
# Focus
# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d
# HJKL: Vim-like focus movement
bind = $mainMod, H, movefocus, l
bind = $mainMod, J, movefocus, d
bind = $mainMod, K, movefocus, u
bind = $mainMod, L, movefocus, r
# Resive windows with mainMod + SHIFT + arrow keys
bind = $mainMod SHIFT, right, resizeactive, 100 0 # Increase window width with keyboard
bind = $mainMod SHIFT, left, resizeactive, -100 0 # Reduce window width with keyboard
bind = $mainMod SHIFT, down, resizeactive, 0 100 # Increase window height with keyboard
bind = $mainMod SHIFT, up, resizeactive, 0 -100 # Reduce window height with keyboard
# Resize with VIM like movement
bind = $mainMod SHIFT, H, resizeactive, -100 0 # Reduce window width with keyboard
bind = $mainMod SHIFT, J, resizeactive, 0 100 # Increase window height with keyboard
bind = $mainMod SHIFT, K, resizeactive, 0 -100 # Reduce window height with keyboard
bind = $mainMod SHIFT, L, resizeactive, 100 0 # Increase window width with keyboard

# Floating Mode
bind = $mainMod, V, togglefloating,
bind = $mainMod, V, resizeactive, exact 70% 70%
bind = $mainMod, V, centerwindow

# Change layout
bind = $mainMod, Space, exec, $changeLayout

# Toggle monitors
bind = ALT, TAB, exec, $toggleMonitor $monitor1 $monitor2

# Switch workspace monitor
bind = SHIFT, TAB, split-changemonitorsilent, next

# Switch workspaces with mainMod + [0-5]
bind = $mainMod, 1, split-workspace, 1
bind = $mainMod, 2, split-workspace, 2
bind = $mainMod, 3, split-workspace, 3
bind = $mainMod, 4, split-workspace, 4
bind = $mainMod, 5, split-workspace, 5

# Move active window to a workspace with mainMod + SHIFT + [0-5]
bind = $mainMod SHIFT, 1, split-movetoworkspacesilent, 1
bind = $mainMod SHIFT, 2, split-movetoworkspacesilent, 2
bind = $mainMod SHIFT, 3, split-movetoworkspacesilent, 3
bind = $mainMod SHIFT, 4, split-movetoworkspacesilent, 4
bind = $mainMod SHIFT, 5, split-movetoworkspacesilent, 5


# # Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

bind=$mod SHIFT ALT, bracketleft, movecurrentworkspacetomonitor, l
bind=$mod SHIFT ALT, bracketright, movecurrentworkspacetomonitor, r

# Color picker
bind = Super+Shift, C, exec, hyprpicker -a # Pick color (Hex) >> clipboard

# Screenshot
bind = ,Print, exec, $screenshotScript

# Fakefullscreen
bind = $mainMod, GRAVE, fakefullscreen

# Lock mouse to current screen
bind = $mainMod, HOME, exec, ~/.config/hypr/scripts/hyprgamelock.sh

# Disable animations
bind = $mainMod, END, exec, ~/.config/hypr/scripts/gamemode.sh

# Alt-f4
bind = ALT, F4, killactive


# Special workspace
bind = SUPER, A, togglespecialworkspace, magic

bind = SUPER SHIFT, A, movetoworkspace, special:magic

# # Volume controls
#
# bindl = ,XF86AudioMute, exec, pamixer -t && dunstify -h string:x-dunst-stack-tag:audio "Volume (Mute): " -h int:value:"$(pamixer --get-volume)" && sleep 0.5 && swaync-client --close-latest
# # binde = ,XF86AudioRaiseVolume, exec, pamixer -i 5 && dunstify -h string:x-dunst-stack-tag:audio "Volume: " -h int:value:"$(pamixer --get-volume)" && sleep 0.5 && swaync-client --close-latest
# # binde = ,XF86AudioLowerVolume, exec, pamixer -d 5 && dunstify -h string:x-dunst-stack-tag:audio "Volume: " -h int:value:"$(pamixer --get-volume)" && sleep 0.5 && swaync-client --close-latest
#
# # Player controls
#
# bindl=, XF86AudioPlay, exec, playerctl play-pause # the stupid key is called play , but it toggles 
# bindl=, XF86AudioNext, exec, playerctl next 
# bindl=, XF86AudioPrev, exec, playerctl previous
#
bind = , XF86MonBrightnessUp, exec, brightnessctl -q s +10% # Increase brightness by 10%
bind = , XF86MonBrightnessDown, exec, brightnessctl -q s 10%- # Reduce brightness by 10%
bind = , XF86AudioMicMute, exec, pactl set-source-mute @DEFAULT_SOURCE@ toggle # Toggle microphone
bind = , XF86Calculator, exec, qalculate-gtk # Open calculator
bind = , XF86Lock, exec, hyprlock # Open screenlock

bindle = , XF86AudioRaiseVolume, exec, wpctl set-volume -l "1.0" @DEFAULT_AUDIO_SINK@ 5%+
bindle = , XF86AudioRaiseVolume, exec, wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print int($2*100)}' > $WOBSOCK
bindle = , XF86AudioLowerVolume, exec, wpctl set-volume -l "1.0" @DEFAULT_AUDIO_SINK@ 5%-
bindle = , XF86AudioLowerVolume, exec, wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print int($2*100)}' > $WOBSOCK
bindl = , XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindl = , XF86AudioMute, exec, wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{if ($3) print 0; else print int($2*100)}' > $WOBSOCK
